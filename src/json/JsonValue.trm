use json.internal

class JsonValue
{
	number _value_type
	
	string _value_string
	number _value_number
	bool _value_bool
	JsonObject _value_json_object
	JsonArray _value_json_array

	ctor(string value) {
		value_string(value)
	}

	ctor(number value) {
		value_number(value)
	}
	
	ctor(bool value) {
		value_bool(value)
	}
	
	ctor(JsonObject value) {
		value_json_object(value)
	}
	
	ctor(JsonArray value) {
		value_json_array(value)
	}
	
	bool is_string() {
		return _value_type == 1
	}
	
	bool is_number() {
		return _value_type == 2
	}
	
	bool is_bool() {
		return _value_type == 3
	}
	
	bool is_json_object() {
		return _value_type == 4
	}
	
	bool is_json_array() {
		return _value_type == 5
	}
	
	_ensure(number type) {
		if (_value_type != type) {
			@panic("JSON error: attempted to get value of type '{json_value_type_to_string(_value_type)}' as '{json_value_type_to_string(type)}'")
		}
	}
	
	string value_string() {
		_ensure(1)
		return _value_string
	}
	
	number value_number() {
		_ensure(2)
		return _value_number
	}
	
	bool value_bool() {
		_ensure(3)
		return _value_bool
	}
	
	JsonObject value_json_object() {
		_ensure(4)
		return _value_json_object
	}
	
	JsonArray value_json_array() {
		_ensure(5)
		return _value_json_array
	}
	
	value_string(string value) {
		_value_type = 1
		_value_string = value
	}
	
	value_number(number value) {
		_value_type = 2
		_value_number = value
	}
	
	value_bool(bool value) {
		_value_type = 3
		_value_bool = value
	}
	
	value_json_object(JsonObject value) {
		_value_type = 4
		_value_json_object = value
	}
	
	value_json_array(JsonArray value) {
		_value_type = 5
		_value_json_array = value
	}
	
	string to_string() {
		if (_value_type == 1) {
			return "\"{_value_string}\""
		}
		
		if (_value_type == 2) {
			return to_string(_value_number)
		}
		
		if (_value_type == 3) {
			return to_string(_value_bool)
		}
		
		if (_value_type == 4) {
			return _value_json_object.to_string()
		}
		
		if (_value_type == 5) {
			return _value_json_array.to_string()
		}
		
		return "N/A"
	}
}

string json_value_type_to_string(number value) {
	if value == 1 return "string"
	if value == 2 return "number"
	if value == 3 return "bool"
	if value == 4 return "JsonObject"
	if value == 5 return "JsonArray"
	@panic("unknown value type '{to_string(value)}'")
}